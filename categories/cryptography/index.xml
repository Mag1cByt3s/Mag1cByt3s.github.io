<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>cryptography - Category - Pascal's Blog</title><link>https://blog.ppeinecke.de/categories/cryptography/</link><description>cryptography - Category - Pascal's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 06 Apr 2022 14:07:33 +0200</lastBuildDate><atom:link href="https://blog.ppeinecke.de/categories/cryptography/" rel="self" type="application/rss+xml"/><item><title>picoCTF - Cryptography - Morse Code</title><link>https://blog.ppeinecke.de/posts/picoctf-cryptography-morse-code/</link><pubDate>Wed, 06 Apr 2022 14:07:33 +0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-cryptography-morse-code/</guid><description><![CDATA[<div class="featured-image">
                <img src="/featuredImages/picoCTF_logo.png" referrerpolicy="no-referrer">
            </div><h1 id="cryptography---morse-code---writeup">Cryptography - morse-code - writeup</h1>
<h2 id="description">description</h2>
<p>Morse code is well known. Can you decrypt this?
Download the file <!-- raw HTML omitted -->here<!-- raw HTML omitted -->.
Wrap your answer with picoCTF{},
put underscores in place of pauses, and use all lowercase.</p>
<h2 id="writeup">writeup</h2>
<p>Opening the file in ghex or sonic visualizer did not help</p>
<p>After reading the following article I decided to try to open it
using audacity.</p>
<p><!-- raw HTML omitted --><a href="https://dropn0w.medium.com/do-the-loop-downunderctf-2021-5d8ee86c0f2b" target="_blank" rel="noopener noreffer">https://dropn0w.medium.com/do-the-loop-downunderctf-2021-5d8ee86c0f2b</a><!-- raw HTML omitted --></p>
<p>Next I tried to interpret the waves as morse code.</p>
<p>I can see that there is a long pattern consisting
out of dashes and dots.
It looks like this:
</p>
<p>I ended up with the following morse code:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>.-- .... ....- --... .... ....- --... .... ----. ----- -.. .-- ..--- ----- ..- ----. .... --...
</span></span></code></pre></td></tr></table>
</div>
</div><p>Using cyberchef &lsquo;From Morse Code&rsquo; I end up with the following string:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>WH47H47H90DW20U9H7
</span></span></code></pre></td></tr></table>
</div>
</div><p>Since the task says &ldquo;Wrap your answer with picoCTF{}, put underscores in place of pauses, and use all lowercase.&rdquo;</p>
<p>I ended up with the following flag:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>picoCTF{wh47_h47h_90d_w20u9h7}
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>picoCTF - Cryptography - credstuff</title><link>https://blog.ppeinecke.de/posts/picoctf-cryptography-credstuff/</link><pubDate>Wed, 06 Apr 2022 14:02:03 +0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-cryptography-credstuff/</guid><description><![CDATA[<div class="featured-image">
                <img src="/featuredImages/picoCTF_logo.png" referrerpolicy="no-referrer">
            </div><h1 id="cryptography---credstuff---writeup">Cryptography - credstuff - writeup</h1>
<h2 id="description">description</h2>
<p>We found a leak of a blackmarket website&rsquo;s login credentials.
Can you find the password of the user cultiris and successfully decrypt it?
Download the leak here. The first user in usernames.txt corresponds to the first password in passwords.txt. The second user corresponds to the second password, and so on.</p>
<h2 id="writeup">writeup</h2>
<p>let&rsquo;s write a python program that finds the corresponding password
for the user &lsquo;cultiris&rsquo;</p>
<p>According to the task description the n-th user corresponds to the n-th
password.</p>
<p>So my task here is to find the position of the user &lsquo;cultiris&rsquo;
in the file &lsquo;usernames.txt&rsquo; and find the password with the same
position in the file &lsquo;passwords.txt&rsquo;</p>
<p>Here is the program I came up with:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#6272a4">#!/usr/bin/env python3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>username<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;cultiris&#34;</span>
</span></span><span style="display:flex;"><span>username_file<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;leak/usernames.txt&#34;</span>
</span></span><span style="display:flex;"><span>password_file<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;leak/passwords.txt&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># find position of cultiris in file leak/usernames.txt</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">search_string_in_file</span>(file_name, string_to_search):
</span></span><span style="display:flex;"><span>    <span style="color:#f1fa8c">&#34;&#34;&#34;Search for the given string in file and return lines containing that string,
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">    along with line numbers&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    line_number <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>
</span></span><span style="display:flex;"><span>    list_of_results <span style="color:#ff79c6">=</span> []
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Open the file in read only mode</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">with</span> <span style="color:#8be9fd;font-style:italic">open</span>(file_name, <span style="color:#f1fa8c">&#39;r&#39;</span>) <span style="color:#ff79c6">as</span> read_obj:
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># Read all lines in the file one by one</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">for</span> line <span style="color:#ff79c6">in</span> read_obj:
</span></span><span style="display:flex;"><span>            <span style="color:#6272a4"># For each line, check if line contains the string</span>
</span></span><span style="display:flex;"><span>            line_number <span style="color:#ff79c6">+=</span> <span style="color:#bd93f9">1</span>
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">if</span> string_to_search <span style="color:#ff79c6">in</span> line:
</span></span><span style="display:flex;"><span>                <span style="color:#6272a4"># If yes, then add the line number &amp; line as a tuple in the list</span>
</span></span><span style="display:flex;"><span>                list_of_results<span style="color:#ff79c6">.</span>append((line_number, line<span style="color:#ff79c6">.</span>rstrip()))
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Return list of tuples containing line numbers and lines where string is found</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> list_of_results
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(search_string_in_file(username_file, username))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># running this code so far we found the username &#39;cultiris&#39; on line 378</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># lets extract line 378 of the file leak/passwords.txt</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>lines <span style="color:#ff79c6">=</span> []                             		 <span style="color:#6272a4"># Declare an empty list named lines.</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> <span style="color:#8be9fd;font-style:italic">open</span> (<span style="color:#f1fa8c">&#39;leak/passwords.txt&#39;</span>, <span style="color:#f1fa8c">&#39;rt&#39;</span>) <span style="color:#ff79c6">as</span> psswd_file: <span style="color:#6272a4"># Open leak/passwords.txt for reading text data.</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> line <span style="color:#ff79c6">in</span> psswd_file:                	 <span style="color:#6272a4"># For each line, stored as line,</span>
</span></span><span style="display:flex;"><span>        lines<span style="color:#ff79c6">.</span>append(line)           		 <span style="color:#6272a4"># add its contents to lines.</span>
</span></span><span style="display:flex;"><span>                          		
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># now just print out line 378 to find the correct password</span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># for the user cultiris</span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># the index is 377 because arrays start at 0</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(lines[<span style="color:#bd93f9">377</span>])
</span></span></code></pre></td></tr></table>
</div>
</div><p>Using my python program I found the username &lsquo;cultiris&rsquo;
on line 378:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>[(378, &#39;cultiris&#39;)]
</span></span></code></pre></td></tr></table>
</div>
</div><p>So all I have to do now is to extract line 378
of the file &lsquo;passwords.txt&rsquo;.</p>
<p>I got this:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>cvpbPGS{P7e1S_54I35_71Z3}
</span></span></code></pre></td></tr></table>
</div>
</div><p>This seems to be encrypted</p>
<p>We need a hint on how to solve this&hellip;</p>
<p>Let&rsquo;s take a look at the passwords.txt file:</p>
<p>If I search the file for the term &lsquo;pico&rsquo;, I found this line:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>pICo7rYpiCoU51N6PicOr0t13
</span></span></code></pre></td></tr></table>
</div>
</div><p>I think that could be a hint to use ROT13 to decrypt the flag!</p>
<p>So let&rsquo;s try to rotate each character by 13 position using ROT13:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>picoCTF{C7r1F_54V35_71M3}
</span></span></code></pre></td></tr></table>
</div>
</div><p>That is our flag!</p>
<p>Awesome!</p>
]]></description></item><item><title>picoCTF - Cryptography - basic-mod1</title><link>https://blog.ppeinecke.de/posts/picoctf-cryptography-basic-mod1/</link><pubDate>Wed, 06 Apr 2022 13:58:41 +0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-cryptography-basic-mod1/</guid><description><![CDATA[<div class="featured-image">
                <img src="/featuredImages/picoCTF_logo.png" referrerpolicy="no-referrer">
            </div><h1 id="cryptography---basic-mod1---writeup">Cryptography - basic-mod1 - writeup</h1>
<h2 id="description">description</h2>
<p>We found this weird message being passed around on the servers,
we think we have a working decrpytion scheme.
Download the message here. Take each number mod 37 and
map it to the following character set: 0-25 is the alphabet (uppercase),
26-35 are the decimal digits, and 36 is an underscore.
Wrap your decrypted message in the picoCTF flag
format (i.e. picoCTF{decrypted_message})</p>
<h2 id="writeup">writeup</h2>
<p>Lets write a simple python program which reads the message
into a string first.</p>
<p>Then I will read each number into an array and take each
number in the array mod 37</p>
<p>After that I will try to map each array field to the following scheme:</p>
<blockquote>
<p>0-25 is the alphabet (uppercase),
26-35 are the decimal digits, and 36 is an underscore.</p>
</blockquote>
<p>At the end I will warp the decoded message in the picoCTF
flag format like so: (i.e. picoCTF{decrypted_message})</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#6272a4">#!/usr/bin/env python3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> string
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># read the file into a string</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> <span style="color:#8be9fd;font-style:italic">open</span>(<span style="color:#f1fa8c">&#39;message.txt&#39;</span>, <span style="color:#f1fa8c">&#39;r&#39;</span>) <span style="color:#ff79c6">as</span> file:
</span></span><span style="display:flex;"><span>    enc_msg <span style="color:#ff79c6">=</span> file<span style="color:#ff79c6">.</span>read()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># split the string by &#39; &#39; and insert the values into an array</span>
</span></span><span style="display:flex;"><span>enc_arr <span style="color:#ff79c6">=</span> enc_msg<span style="color:#ff79c6">.</span>split( )
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># print out the array for test purposes</span>
</span></span><span style="display:flex;"><span>enc_arr_len <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">len</span>(enc_arr)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># define empty mod_arr</span>
</span></span><span style="display:flex;"><span>mod_arr <span style="color:#ff79c6">=</span> []
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># calculate modulo 37 of every number</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">for</span> i <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(<span style="color:#bd93f9">0</span>, enc_arr_len):
</span></span><span style="display:flex;"><span>        mod_arr<span style="color:#ff79c6">.</span>append(<span style="color:#8be9fd;font-style:italic">round</span>(<span style="color:#8be9fd;font-style:italic">int</span>(enc_arr[i]) <span style="color:#ff79c6">%</span> <span style="color:#bd93f9">37</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># get length of resulting array</span>
</span></span><span style="display:flex;"><span>mod_arr_len <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">len</span>(mod_arr)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># define array for final string</span>
</span></span><span style="display:flex;"><span>final_string <span style="color:#ff79c6">=</span> []
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">for</span> i <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(<span style="color:#bd93f9">0</span>, mod_arr_len):
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># try to map numbers from 0 to 25 to uppercase characters of the alphabet</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> <span style="color:#bd93f9">0</span> <span style="color:#ff79c6">&lt;=</span> <span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">&lt;=</span> <span style="color:#bd93f9">25</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">if</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;A&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">1</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;B&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">2</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;C&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">3</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;D&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">4</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;E&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">5</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;F&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">6</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;G&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">7</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;H&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">8</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;I&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">9</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;J&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">10</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;K&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">11</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;L&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">12</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;M&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">13</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;N&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">14</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;O&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">15</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;P&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">16</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;Q&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">17</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;R&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">18</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;S&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">19</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;T&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">20</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;U&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">21</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;V&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">22</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;W&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">23</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;X&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">24</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;Y&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">25</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;Z&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># try to map numbers from 26 to 35 to decimal digits</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">elif</span> <span style="color:#bd93f9">26</span> <span style="color:#ff79c6">&lt;=</span> <span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">&lt;=</span> <span style="color:#bd93f9">35</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">if</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">26</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">27</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">28</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;2&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">29</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;3&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">30</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;4&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">31</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;5&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">32</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;6&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">33</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;7&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">34</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;8&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">elif</span>(<span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">35</span>):
</span></span><span style="display:flex;"><span>                        final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#39;9&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># try to map 36 to an underscore _</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">elif</span> <span style="color:#8be9fd;font-style:italic">int</span>(mod_arr[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">36</span>:
</span></span><span style="display:flex;"><span>                final_string<span style="color:#ff79c6">.</span>append(<span style="color:#f1fa8c">&#34;_&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>final_flag <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#39;&#39;</span><span style="color:#ff79c6">.</span>join(final_string)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;picoCTF{&#34;</span> <span style="color:#ff79c6">+</span> final_flag <span style="color:#ff79c6">+</span> <span style="color:#f1fa8c">&#34;}&#34;</span>)
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="flag">Flag:</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>picoCTF{R0UND_N_R0UND_B0D5F596}
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>