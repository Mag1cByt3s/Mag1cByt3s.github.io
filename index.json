[{"content":"Crypto - Lost in - writeup description 324c6e597364696f3259725a6f646d673261453d\nBingus sent us this encrypted messagen\nCan you decrypt?\nwriteup this is the message we got:\n324c6e597364696f3259725a6f646d673261453d this looks to be hex let\u0026rsquo;s translate that hex string to ascii:\n2LnYsdio2YrZodmg2aE= The = at the end most probably means that this is base64\nIf I try to decode this from base64 I get this:\nعربي١٠١ this is Arabic.\nOnce I try to use google translate to translate this to English I get this:","date":"7 April 2022","permalink":"https://blog.ppeinecke.de/posts/ritsecctf-crypto-lost-in/","title":"RITSEC CTF - Crypto - Lost In"},{"content":"Misc - Stegwalk - writeup description We found these files in storage. We think there might be something more to one of these images. Good luck!\nwriteup Ok so I first downloaded the file \u0026lsquo;StegWalk.zip\u0026rsquo;\nLet\u0026rsquo;s move it for our convenience.\nmv ~/Downloads/StegWalk.zip . I am going to extract the file first\nunzip StegWalk.zip -d StegWalk Inside this zip archive are a dozen of .png files \u0026hellip;\nMost of these image files just say \u0026lsquo;Nothing\u0026rsquo;.","date":"7 April 2022","permalink":"https://blog.ppeinecke.de/posts/ritsecctf-misc-stegwalk/","title":"RITSEC CTF - Misc - Stegwalk"},{"content":"Misc - Scrumptions Snacks - writeup description Sheamus the STEGOsaurus is hungry! He\u0026rsquo;s somewhat secretive about his favorite snack spot, but he\u0026rsquo;ll gladly share his secret if you say the word: \u0026ldquo;lunch\u0026rdquo;. Can you identify the name of Sheamus' favorite food establishment?\nwriteup So I first downloaded the file \u0026lsquo;stegosaurus.jpg\u0026rsquo;.\nLet\u0026rsquo;s see what we have here:\nmv ~/Downloads/stegosaurus.jpg . file stegosaurus.jpg stegosaurus.jpg: JPEG image data, JFIF standard 1.01, resolution (DPI), density 168x168, segment length 16, baseline, precision 8, 964x910, components 3 It is a JPEG file so steganography is possible.","date":"7 April 2022","permalink":"https://blog.ppeinecke.de/posts/ritsecctf-misc-scrumptions-snacks/","title":"RITSEC CTF - Misc - Scrumptions Snacks"},{"content":"Web Exploitation - SQLiLite - writeup description Can you login to this website?\nTry to login here.\nwriteup Once i visit the website http://saturn.picoctf.net:60431/ in firefox I can see a login form with a username and a password field.\nMy first attempt was to use the username \u0026lsquo;admin\u0026rsquo; and try a basic sql injection.\nSo I input in the username field this:\nadmin\u0026#39;-- the single quote is here to end the input of the text box.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-sqlilite/","title":"picoCTF - Web Exploitation - SQLiLite"},{"content":"Web Exploitation - SQL Direct - writeup description Connect to this PostgreSQL server and find the flag!\npsql -h saturn.picoctf.net -p 49248 -U postgres pico\nPassword is postgres\nwriteup Ok let\u0026rsquo;s first connect to the database server:\npsql -h saturn.picoctf.net -p 49248 -U postgres pico the password is \u0026lsquo;postgres\u0026rsquo;\nLet\u0026rsquo;s list all databases first\npico=# \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -----------+----------+----------+------------+------------+----------------------- pico | postgres | UTF8 | en_US.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-sql-direct/","title":"picoCTF - Web Exploitation - SQL Direct"},{"content":"Web Exploitation - Search Source - writeup description The developer of this website mistakenly left an important artifact in the website source, can you find it? The website is here\nwriteup I was not able to find anything interesting on the website by just looking at the source code in the browser.\nSo let\u0026rsquo;s clone the website first using HTTrack so we can take a look at the full source.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-search-source/","title":"picoCTF - Web Exploitation - Search source"},{"content":"Web Exploitation - Power Cookie - writeup description Can you get the flag? Go to this website and see what you can discover.\nwriteup Looking at the check.php function I can see that it requests a cookie \u0026lsquo;isAdmin\u0026rsquo;.\nThat cookie is not present at the first visit of the page.\nSo lets refresh the webpage.\nNow the cookie is present.\nThe value of this particuluar cookie is \u0026lsquo;0\u0026rsquo; currently.\nSo lets change it to \u0026lsquo;1\u0026rsquo; and refresh the page once more.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-power-cookie/","title":"picoCTF - Web Exploitation - Power Cookie"},{"content":"Web Exploitation - Local Authority - writeup description Can you get the flag? Go to this website and see what you can discover.\nwriteup Once I open the link http://saturn.picoctf.net:51419/ in firefox I get to a page \u0026ldquo;Secure Customer Portal\u0026rdquo;.\nI can see a login form with username and password.\nOn the website I see a hint:\n Only letters and numbers allowed for username and password.\n I tried to do a simple post request to the login.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-local-authority/","title":"picoCTF - Web Exploitation - Local Authority"},{"content":"Web Exploitation - Includes - writeup description Can you get the flag? Go to this website and see what you can discover.\nwriteup Once I opened the website http://saturn.picoctf.net:60935/ in firefox and looking at the source code I could immediately find the flag inside a comment in the html source code:\n\u0026lt;!--picoCTF{1n5p3t0r_0f_h7ml_ab1df88d}--\u0026gt; So the flag is:\npicoCTF{1n5p3t0r_0f_h7ml_ab1df88d} ","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-inspect-html/","title":"picoCTF - Web Exploitation - Inspect HTML"},{"content":"Web Exploitation - Includes - writeup description Can you get the flag? Go to this website and see what you can discover.\nwriteup Ok so I went ahead and visited the url http://saturn.picoctf.net:52811/ in firefox.\nI am presente with a webpage with a bunch of text and a button that says \u0026ldquo;Say hello\u0026rdquo;.\nOnce I press that button I get a javascript alert() popup that says \u0026ldquo;This code is in a separate file!","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-web-exploitation-includes/","title":"picoCTF - Web Exploitation - Includes"},{"content":"Reverse Engineering - unpackme.py - writeup description Can you get the flag?\nReverse engineer this Python program.\nwriteup Let\u0026rsquo;s download the python program first.\nwget https://artifacts.picoctf.net/c/470/unpackme.flag.py I will try to reverse engineer this python code \u0026hellip;\nIf we take a look at the code:\nimport base64 from cryptography.fernet import Fernet payload = b\u0026#39;gAAAAABiMD1Ju5_eZeZy7C03K_YcWGDGXfvy5A9b5HzV-uZIYN8syTFGHgLwoRonYtCS0WcDrufxRRXlvNKtyEMqMS0AADLcRNr6VYpLLbKaETF37L22GEg1ok8NutHXK6gy47sBLmxmWWU729b86rzK6IMc2Kg-CR0bMm_fzrbRrWEYSk0WRNnKxy7Juuy-Ss2RjbACKgbwL7HNGATu3hYuPflf3PCKztLRFXCBxijKncKZgt68wYhGnPAzYvUVrdhhtMg9ra7ZKIirltPfKC8iX2DqmR9vVA==\u0026#39; key_str = \u0026#39;correctstaplecorrectstaplecorrec\u0026#39; key_base64 = base64.b64encode(key_str.encode()) f = Fernet(key_base64) plain = f.decrypt(payload) exec(plain.decode()) We can see that some part of the code is missing.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-unpackme.py/","title":"picoCTF - Reverse Engineering - unpackme.py"},{"content":"Reverse Engineering - Safe Opener - writeup description Can you open this safe?\nI forgot the key to my safe but this program is supposed to help me with retrieving the lost key.\nCan you help me unlock my safe?\nPut the password you recover into the picoCTF flag format like: picoCTF{password}\nwriteup The \u0026ldquo;safe\u0026rdquo; is a .java file.\nSince .java is used for java source code this should be fairly easy to reverse engineer.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-safe-opener/","title":"picoCTF - Reverse Engineering - Safe Opener"},{"content":"Reverse Engineering - patchme.py - writeup description Can you get the flag?\nRun this Python program in the same directory as this encrypted flag.\nwriteup Let\u0026rsquo;s take a look at the encrypted flag\u0026hellip;\ncat flag.txt.enc CR1@ UYX+ 6UB P\\E That does not help.\nLet\u0026rsquo;s look at the python code\u0026hellip;\nMh that is peculiar:\nif( user_pw == \u0026#34;ak98\u0026#34; + \\ \u0026#34;-=90\u0026#34; + \\ \u0026#34;adfjhgj321\u0026#34; + \\ \u0026#34;sleuth9000\u0026#34;) Let\u0026rsquo;s fire up bpython and input this code:","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-patchme.py/","title":"picoCTF - Reverse Engineering - patchme.py"},{"content":"Reverse Engineering - file-run2 - writeup description Another program, but this time, it seems to want some input. What happens if you try to run it on the command line with input \u0026ldquo;Hello!\u0026rdquo;?\nDownload the program here.\nwriteup by simply executing the file with ./run we get\nRun this file with only one argument. if I try to supply one argument like this: ./run 1 I get\nWon\u0026#39;t you say \u0026#39;Hello!","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-file-run2/","title":"picoCTF - Reverse Engineering - file-run2"},{"content":"Reverse Engineering - file-run1 - writeup description A program has been provided to you, what happens if you try to run it on the command line?\nDownload the program here.\nhttps://artifacts.picoctf.net/c/314/run\nwriteup by simply running the program we get the flag:\nThe flag is: picoCTF{U51N6_Y0Ur_F1r57_F113_ac61264e} ","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-file-run1/","title":"picoCTF - Reverse Engineering - file-run1"},{"content":"Reverse Engineering - bloat.py - writeup description Can you get the flag?\nRun this Python program in the same directory as this encrypted flag.\nwriteup So let\u0026rsquo;s download the python program and the encrypted flag first!\nwget https://artifacts.picoctf.net/c/434/bloat.flag.py wget https://artifacts.picoctf.net/c/434/flag.txt.enc Let\u0026rsquo;s make a copy of the python program and try to fix it using debugging in bpython!\ncp bloat.flag.py flag.py After a lot of debugging and reverse engineering using bpython I found the flag!","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-bloat.py/","title":"picoCTF - Reverse Engineering - bloat.py"},{"content":"Forensics - Bbbbloat - writeup description Can you get the flag?\nReverse engineer this binary.\nwriteup After loading the binary into Ghidra and browsing the decompiled code I noticed this function:\nundefined8 FUN_00101307(void) { char *__s; long in_FS_OFFSET; int local_48; undefined8 local_38; undefined8 local_30; undefined8 local_28; undefined8 local_20; long local_10; local_10 = *(long *)(in_FS_OFFSET + 0x28); local_38 = 0x4c75257240343a41; local_30 = 0x3062396630664634; local_28 = 0x33343066635f3d33; local_20 = 0x4e5f3463665f34; printf(\u0026#34;What\\\u0026#39;s my favorite number?","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-bbbbloat/","title":"picoCTF - Reverse Engineering - Bbbbloat"},{"content":"Forensics - St3g0 - writeup description Download this image and find the flag.\nDownload image\nwriteup Ok so let\u0026rsquo;s download the file first \u0026hellip;\nwget https://artifacts.picoctf.net/c/427/pico.flag.png Let\u0026rsquo;s check the file type just to make sure we actually have a .png file here \u0026hellip;\nfile pico.flag.png pico.flag.png: PNG image data, 585 x 172, 8-bit/color RGBA, non-interlaced Ok so it is in fact a PNG file.\nLet\u0026rsquo;s check for any steganography using stegdetect","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-st3g0/","title":"picoCTF - Forensics - St3g0"},{"content":"Forensics - Sleuthkit Apprentice - writeup description Download this disk image and find the flag. Note: if you are using the webshell, download and extract the disk image into /tmp not your home directory.\nDownload compressed disk image\nwriteup So we a got a file \u0026lsquo;disk.flag.img\u0026rsquo;.\nI will try to create a folder and mount the disk image into that folder first.\nmkdir mnt mount ./disk.flag.img mnt mount: mnt: failed to setup loop device for /home/pascal/Pentesting/picoCTF_2022/Forensics/Sleuthkit Apprentice/disk.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-sleuthkit-apprentice/","title":"picoCTF - Forensics - Sleuthkit Apprentice"},{"content":"Forensics - Packets Primer - writeup description Download the packet capture file and use packet analysis software to find the flag.\nDownload packet capture\nwriteup Ok so we got a .pcap file as a download:\nnetwork-dump.flag.pcap Lets look at the content using wireshark.\nwireshark -r network-dump.flag.pcap I found some interesting traffic:\n4 0.001225 10.0.2.15 10.0.2.4 TCP 126 48750 → 9000 [PSH, ACK] Seq=1 Ack=1 Win=64256 Len=60 TSval=2379213157 TSecr=1760620995 Looking at the hex dump of that transaction I can see the following:","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-packets-primer/","title":"picoCTF - Forensics - Packets Primer"},{"content":"Forensics - Redaction gone wrong - writeup description Now you DON’T see me. This report has some critical data in it, some of which have been redacted correctly, while some were not. Can you find an important key that was not redacted properly?\nwriteup By simply opening the pdf file in LibreOffice Draw I was able to move the black boxes to uncover the flag!\nThe flag is:\npicoCTF{C4n_Y0u_S33_m3_fully} ","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-redaction-gone-wrong/","title":"picoCTF - Forensics - Redaction gone wrong"},{"content":"Forensics - Operation Orchid - writeup description Download this disk image and find the flag.\nNote: if you are using the webshell, download and extract the disk image into /tmp not your home directory.\nhttps://artifacts.picoctf.net/c/242/disk.flag.img.gz\nwriteup Ok let\u0026rsquo;s download the image first!\nwget https://artifacts.picoctf.net/c/242/disk.flag.img.gz Next I will extract it.\ngunzip disk.flag.img.gz file disk.flag.img disk.flag.img: DOS/MBR boot sector; partition 1 : ID=0x83, active, start-CHS (0x0,32,33), end-CHS (0xc,223,19), startsector 2048, 204800 sectors; partition 2 : ID=0x82, start-CHS (0xc,223,20), end-CHS (0x19,159,6), startsector 206848, 204800 sectors; partition 3 : ID=0x83, start-CHS (0x19,159,7), end-CHS (0x32,253,11), startsector 411648, 407552 sectors That is a dos / mbr boot partition","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-operation-orchid/","title":"picoCTF - Forensics - Operation Orchid"},{"content":"Forensics - Operation Oni - writeup description Download this disk image, find the key and log into the remote machine.\nNote: if you are using the webshell, download and extract the disk image into /tmp not your home directory.\nwriteup So I went ahead, fired up the remote machine and downloaded the disk image.\nwget https://artifacts.picoctf.net/c/372/disk.img.gz It is gzip compressed so I first had to decompress it\ngunzip disk.img.gz Now I have a \u0026lsquo;disk.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-operation-oni/","title":"picoCTF - Forensics - Operation Oni"},{"content":"Forensics - Lookey here - writeup description Attackers have hidden information in a very large mass of data in the past, maybe they are still doing it. Download the data here.\nwriteup looking at the content of the txt file I can see a lot of random text\u0026hellip;\nhead anthem.flag.txt ANTHEM by Ayn Rand CONTENTS PART ONE PART TWO By simply grepping out picoCTF I could find the flag\ncat anthem.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-lookey-here/","title":"picoCTF - Forensics - Lookey Here"},{"content":"Forensics - File types - writeup description This file was found among some files marked confidential but my pdf reader cannot read it, maybe yours can. You can download the file from here.\nwriteup Let\u0026rsquo;s download the file!\nwget https://artifacts.picoctf.net/c/329/Flag.pdf lets see what file we got here\u0026hellip;\nfile Flag.pdf Flag.pdf: shell archive text Looks like this is a shell archive file (.shar)\nlets rename the file to a proper file extension first.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-file-types/","title":"picoCTF - Forensics - File types"},{"content":"Forensics - Enhance! - writeup description Download this image file and find the flag.\nDownload image file \nwriteup Ok so I downloaded the image file drawing.flag.svg\nChecking with the file command what that actually is:\nfile drawing.flag.svg drawing.flag.svg: SVG Scalable Vector Graphics image looks like it is actually a svg file.\nLets try to open it using feh e.g.\nfeh drawing.flag.svg feh WARNING: drawing.flag.svg - Does not look like an image (magic bytes missing) feh tells me that the magic bytes are missing.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-enhance/","title":"picoCTF - Forensics - Enhance!"},{"content":"Forensics - Eavesdrop - writeup description Download this packet capture and find the flag.\nDownload packet capture\nwriteup Let\u0026rsquo;s first download this file: https://artifacts.picoctf.net/c/364/capture.flag.pcap\nwget https://artifacts.picoctf.net/c/364/capture.flag.pcap --2022-03-17 18:29:49-- https://artifacts.picoctf.net/c/364/capture.flag.pcap Resolving artifacts.picoctf.net (artifacts.picoctf.net)... 108.157.4.16, 108.157.4.118, 108.157.4.13, ... Connecting to artifacts.picoctf.net (artifacts.picoctf.net)|108.157.4.16|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 7518 (7.3K) [application/octet-stream] Saving to: \u0026#39;capture.flag.pcap\u0026#39; capture.flag.pcap 100%[=======================================\u0026gt;] 7.34K --.-KB/s in 0s 2022-03-17 18:29:50 (92.7 MB/s) - \u0026#39;capture.flag.pcap\u0026#39; saved [7518/7518] Ok so we have a file called \u0026lsquo;capture.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-forensics-eavesdrop/","title":"picoCTF - Forensics - Eavesdrop"},{"content":"Cryptography - morse-code - writeup description Morse code is well known. Can you decrypt this? Download the file here. Wrap your answer with picoCTF{}, put underscores in place of pauses, and use all lowercase.\nwriteup Opening the file in ghex or sonic visualizer did not help\nAfter reading the following article I decided to try to open it using audacity.\nhttps://dropn0w.medium.com/do-the-loop-downunderctf-2021-5d8ee86c0f2b\nNext I tried to interpret the waves as morse code.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-cryptography-morse-code/","title":"picoCTF - Cryptography - Morse Code"},{"content":"Cryptography - credstuff - writeup description We found a leak of a blackmarket website\u0026rsquo;s login credentials. Can you find the password of the user cultiris and successfully decrypt it? Download the leak here. The first user in usernames.txt corresponds to the first password in passwords.txt. The second user corresponds to the second password, and so on.\nwriteup let\u0026rsquo;s write a python program that finds the corresponding password for the user \u0026lsquo;cultiris\u0026rsquo;","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-cryptography-credstuff/","title":"picoCTF - Cryptography - credstuff"},{"content":"Cryptography - basic-mod1 - writeup description We found this weird message being passed around on the servers, we think we have a working decrpytion scheme. Download the message here. Take each number mod 37 and map it to the following character set: 0-25 is the alphabet (uppercase), 26-35 are the decimal digits, and 36 is an underscore. Wrap your decrypted message in the picoCTF flag format (i.e. picoCTF{decrypted_message})\nwriteup Lets write a simple python program which reads the message into a string first.","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-cryptography-basic-mod1/","title":"picoCTF - Cryptography - basic-mod1"},{"content":"Binary Exploitation - buffer overflow 0 - writeup Description Smash the stack\nLet\u0026rsquo;s start off simple, can you overflow the correct buffer?\nThe program is available here.\nYou can view source here.\nAnd connect with it using: nc saturn.picoctf.net 57331\nWriteup First I checked the strings of the binary file using the strings command but unfortunately I did not find anything interesting.\nLet\u0026rsquo;s fire up Ghidra and see what we\u0026rsquo;ve got here \u0026hellip;","date":"6 April 2022","permalink":"https://blog.ppeinecke.de/posts/picoctf-binary-exploitation-buffer-overflow-0/","title":"picoCTF - Binary Exploitation - Buffer Overflow 0"},{"content":"Web - Et tu, Brute? - writeup Description I want to see how many people are actually my friends and aren\u0026rsquo;t just pretending! Only my best friends get flags. You can check our friendship status at this website. mhsctf-ettubrute.0xmmalik.repl.co (you may need to wait for the site to wake up)\nWriteup So I went ahead and wrote a simple brute force program in python:\n#!/usr/bin/env python3 import requests from requests.adapters import HTTPAdapter from requests.","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-web-et-tu-brute/","title":"MHSCTF - Web - Et tu, Brute?"},{"content":"General - Where the Wildcards Are 2 - writeup Writeup Match all lowercase letters: [a-z] Match all lowercase letters which are followed by two or more capital letters then three or more digits: (the capital letters and digits should not be included in the match) [a-z](?=[A-Z]{2,}[0-9]{3,}) Match all numbers, letters, or underscores using the shortest possible pattern \\w Flag: flag{m@tc#_mak3r} ","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-general-where-the-wildcards-are-2/","title":"MHSCTF - General - Where the Wildcards Are 2"},{"content":"Forensics - Blatant Corruption - writeup Writeup so the file is broken.\nIf we open the file with a hex editor we can see that the file header \u0026ldquo;.PNG\u0026rdquo; is missing at the top although it is a .png file.\nSo if we insert the hex bytes\n89 50 4E 47 at the very top of the file which translates to .PNG and we save the modified file we can now open the file successfully.","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-forensics-blatant-corruption/","title":"MHSCTF - Forensics - Blatant Corruption"},{"content":"Forensics - Blank Slate - writeup Writeup by simply cat\u0026rsquo;ing out the raw file I can see\nflag{get_grepped} ","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-forensics-blank-slate/","title":"MHSCTF - Forensics - Blank Slate"},{"content":"Crypto - What\u0026rsquo;s Cooking? - writeup Writeup 65 141 40 66 144 40 67 70 40 66 70 40 65 141 40 63 63 40 67 64 40 67 64 40 66 62 40 65 67 40 63 61 40 66 66 40 66 63 40 64 65 40 64 61 40 66 142 40 66 64 40 64 67 40 64 66 40 63 71 According to cyberchef it is octal =\u0026gt; hex =\u0026gt; base64","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-crypto-whats-cooking/","title":"MHSCTF - Crypto - What's Cooking?"},{"content":"Crypto - Em Dee - writeup Description Another super-secret message from Em!\nWhat does this one mean?\nb4b11af47f3086ce1293df4908d026d4 Remember to enter your answer in the \u0026ldquo;flag{\u0026hellip;}\u0026rdquo; format!\nHint: If at first you don\u0026rsquo;t succeed, try, try again.\nWriteup Looks like an MD5 hash\n found the hash:\nFound : zero_cool (hash = b4b11af47f3086ce1293df4908d026d4) flag{zero_cool} ","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-crypto-em-dee-2/","title":"MHSCTF - Crypto - Em Dee 2"},{"content":"Crypto - Em Dee - writeup Description I have a good friend named Em. She loves secret codes, so when she challenged me this time, I was well up for it! She told me that she encoded the word \u0026ldquo;happy\u0026rdquo; as \u0026ldquo;56ab24c15b72a457069c5ea42fcfc640\u0026rdquo; and \u0026ldquo;sad\u0026rdquo; as \u0026ldquo;49f0bad299687c62334182178bfd75d8\u0026rdquo; (without the quotes) and challenged me to encode \u0026ldquo;mhsctf\u0026rdquo; using her method! I can\u0026rsquo;t figure it out! What would it be? Enter your answer in flag format: \u0026ldquo;flag{\u0026hellip;}\u0026rdquo;","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/mhsctf-crypto-em-dee/","title":"MHSCTF - Crypto - Em Dee"},{"content":"Web - Favourite Website - writeup Description After a long time, Alex tries to visit his favorite website. But nobody thought he would become very unlucky. Visit the website and help him get the flag.\nLink: https://wec-ctf-2022-web.herokuapp.com/q2\nWriteup If we refresh the webpage we see there is a cookie that changes everytime i refresh the page.\nThat cookie is called _gatj\nCurrently its value is\nc3RpbGwgY2Fubm90IHNvbHZlIHRoaXMgdGFzaz90aW1lcz0wMDAwMDAwOCZpZD03Yzg3ZjBlOC1hODNiLTQyZDQtYmU1MS1hYWI5MjY5MzRjYzI3 That is base64 and decodes to","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/ectf-web-favourite-website/","title":"E-CTF - Web - Favourite Website"},{"content":"Osint - Vacation - Writeup Description People even try to turn their pets into celebrities, it gets annoying quite fast. That reminds me, have you come across @tig3r_and_b3ar ? Apparently their owner is a photographer, I haven’t contacted her though.\nWriteup Since the owner is a photographer we should look at instagram.\nBy using an instagram viewer we can look at her profile without actually logging in.\nhttps://dumpor.com/v/tig3r_and_b3ar\nThe one thing that sticks out here is that this account is following exactly one other account.","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/ectf-osint-vacation/","title":"E-CTF - Osint - Vacation"},{"content":"Misc - whatisthis - writeup Description Intelligence has found same weird material from Mr. Codeshankar (yes,him again). So it is your task now to find out whats contained in it. The link is here \nWriteup after unpacking the zip file whatisthis.zip I get an image file whatisthis.png\nThe file itself is broken and cannot be opened.\nAfter checking with the file command what that file actually is I am presented with the following: whatisthis.","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/ectf-misc-what-is-this/","title":"E-CTF - Misc - What Is This"},{"content":"Forensics - THE CAT KNOWS THE CULPRIT writeup Description Detective Jake Peralta and his partner Charles Boyle are assigned a Grand Larceny case, by their captain Raymond Holt. Upon their arrival to crime scene they find that there are no clues for them to catch the victim, so they leave the crime scene and at the exif exit door they find an image along with a note saying \u0026ldquo;THE CAT KNOWS THE CULPRIT.","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/ectf-forensics-the-cat-knows-the-culprit/","title":"E-CTF - Forensics - THE CAT KNOWS THE CULPRIT"},{"content":"Forensics - I can do this all day - writeup Description Tony Stark: a hacker who\u0026rsquo;s faster than ultron? he could be anywhere GLOBAL. And as this is the center of everything, I\u0026rsquo;m just a REGULAR guy looking for a needle in the world\u0026rsquo;s biggest haystack.\nWorld Hub Tech: How do you find it? Tony Stark: pretty simple. you bring a magnet.\nFlag format: CTF{\u0026hellip;}\nWriteup cat *.txt | grep CTF CTF{d3cry471ng_nu3l34r_c0d35} So by simply just simply cat\u0026rsquo;ing all of the files in the different directories we got the flag.","date":"11 March 2022","permalink":"https://blog.ppeinecke.de/posts/ectf-forensics-i-can-do-this-all-day/","title":"E-CTF - Forensics - I Can Do This All Day"},{"content":"Forensics - I am Groot - writeup Description Send the right message to get your flag from Groot.\nCheck the discord server, !groot will call the bot.\nHint: We are friends\nWriteup Once I tried to dm the bot directly with: !groot rocket\nI get\n01001001 00100000 01100001 01101101 00100000 01000111 01110010 01101111 01101111 01110100 00100001 Lets convert that binary to ascii\nthat is binary and coverts to\nI am Groot!","date":"10 March 2022","permalink":"https://blog.ppeinecke.de/posts/ectf-forensics-i-am-groot/","title":"E-CTF - Forensics - I Am Groot"}]