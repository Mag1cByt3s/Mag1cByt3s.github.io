<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>forensics - Tag - Pascal&#39;s Blog</title>
        <link>https://blog.ppeinecke.de/tags/forensics/</link>
        <description>forensics - Tag - Pascal&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 06 Apr 2022 15:12:22 &#43;0200</lastBuildDate><atom:link href="https://blog.ppeinecke.de/tags/forensics/" rel="self" type="application/rss+xml" /><item>
    <title>picoCTF - Reverse Engineering - Bbbbloat</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-bbbbloat/</link>
    <pubDate>Wed, 06 Apr 2022 15:12:22 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-reverse-engineering-bbbbloat/</guid>
    <description><![CDATA[Forensics - Bbbbloat - writeup description Can you get the flag?
Reverse engineer this binary.
writeup After loading the binary into Ghidra and browsing the decompiled code I noticed this function:
undefined8 FUN_00101307(void) { char *__s; long in_FS_OFFSET; int local_48; undefined8 local_38; undefined8 local_30; undefined8 local_28; undefined8 local_20; long local_10; local_10 = *(long *)(in_FS_OFFSET + 0x28); local_38 = 0x4c75257240343a41; local_30 = 0x3062396630664634; local_28 = 0x33343066635f3d33; local_20 = 0x4e5f3463665f34; printf(&#34;What\&#39;s my favorite number?]]></description>
</item>
<item>
    <title>picoCTF - Forensics - St3g0</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-st3g0/</link>
    <pubDate>Wed, 06 Apr 2022 15:08:21 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-st3g0/</guid>
    <description><![CDATA[Forensics - St3g0 - writeup description Download this image and find the flag.
Download imagewriteup Ok so let&rsquo;s download the file first &hellip;
wget https://artifacts.picoctf.net/c/427/pico.flag.png Let&rsquo;s check the file type just to make sure we actually have a .png file here &hellip;
file pico.flag.png pico.flag.png: PNG image data, 585 x 172, 8-bit/color RGBA, non-interlaced Ok so it is in fact a PNG file.
Let&rsquo;s check for any steganography using stegdetect]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Sleuthkit Apprentice</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-sleuthkit-apprentice/</link>
    <pubDate>Wed, 06 Apr 2022 15:05:06 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-sleuthkit-apprentice/</guid>
    <description><![CDATA[Forensics - Sleuthkit Apprentice - writeup description Download this disk image and find the flag. Note: if you are using the webshell, download and extract the disk image into /tmp not your home directory.
Download compressed disk imagewriteup So we a got a file &lsquo;disk.flag.img&rsquo;.
I will try to create a folder and mount the disk image into that folder first.
mkdir mnt mount ./disk.flag.img mnt mount: mnt: failed to setup loop device for /home/pascal/Pentesting/picoCTF_2022/Forensics/Sleuthkit Apprentice/disk.]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Packets Primer</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-packets-primer/</link>
    <pubDate>Wed, 06 Apr 2022 14:51:19 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-packets-primer/</guid>
    <description><![CDATA[Forensics - Packets Primer - writeup description Download the packet capture file and use packet analysis software to find the flag.
Download packet capturewriteup Ok so we got a .pcap file as a download:
network-dump.flag.pcap Lets look at the content using wireshark.
wireshark -r network-dump.flag.pcap I found some interesting traffic:
4 0.001225 10.0.2.15 10.0.2.4 TCP 126 48750 → 9000 [PSH, ACK] Seq=1 Ack=1 Win=64256 Len=60 TSval=2379213157 TSecr=1760620995 Looking at the hex dump of that transaction I can see the following:]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Redaction gone wrong</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-redaction-gone-wrong/</link>
    <pubDate>Wed, 06 Apr 2022 14:51:19 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-redaction-gone-wrong/</guid>
    <description><![CDATA[Forensics - Redaction gone wrong - writeup description Now you DON’T see me. This report has some critical data in it, some of which have been redacted correctly, while some were not. Can you find an important key that was not redacted properly?
writeup By simply opening the pdf file in LibreOffice Draw I was able to move the black boxes to uncover the flag!
The flag is:
picoCTF{C4n_Y0u_S33_m3_fully} ]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Operation Orchid</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-operation-orchid/</link>
    <pubDate>Wed, 06 Apr 2022 14:49:28 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-operation-orchid/</guid>
    <description><![CDATA[Forensics - Operation Orchid - writeup description Download this disk image and find the flag.
Note: if you are using the webshell, download and extract the disk image into /tmp not your home directory.
https://artifacts.picoctf.net/c/242/disk.flag.img.gzwriteup Ok let&rsquo;s download the image first!
wget https://artifacts.picoctf.net/c/242/disk.flag.img.gz Next I will extract it.
gunzip disk.flag.img.gz file disk.flag.img disk.flag.img: DOS/MBR boot sector; partition 1 : ID=0x83, active, start-CHS (0x0,32,33), end-CHS (0xc,223,19), startsector 2048, 204800 sectors; partition 2 : ID=0x82, start-CHS (0xc,223,20), end-CHS (0x19,159,6), startsector 206848, 204800 sectors; partition 3 : ID=0x83, start-CHS (0x19,159,7), end-CHS (0x32,253,11), startsector 411648, 407552 sectors That is a dos / mbr boot partition]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Operation Oni</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-operation-oni/</link>
    <pubDate>Wed, 06 Apr 2022 14:47:15 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-operation-oni/</guid>
    <description><![CDATA[Forensics - Operation Oni - writeup description Download thisdisk image, find the key and log into the remote machine.
Note: if you are using the webshell, download and extract the disk image into /tmp not your home directory.
writeup So I went ahead, fired up the remote machine and downloaded the disk image.
wget https://artifacts.picoctf.net/c/372/disk.img.gz It is gzip compressed so I first had to decompress it
gunzip disk.img.gz Now I have a &lsquo;disk.]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Lookey Here</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-lookey-here/</link>
    <pubDate>Wed, 06 Apr 2022 14:25:47 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-lookey-here/</guid>
    <description><![CDATA[Forensics - Lookey here - writeup description Attackers have hidden information in a very large mass of data in the past, maybe they are still doing it. Download the data here.
writeup looking at the content of the txt file I can see a lot of random text&hellip;
head anthem.flag.txt ANTHEM by Ayn Rand CONTENTS PART ONE PART TWO By simply grepping out picoCTF I could find the flag
cat anthem.]]></description>
</item>
<item>
    <title>picoCTF - Forensics - File types</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-file-types/</link>
    <pubDate>Wed, 06 Apr 2022 14:21:10 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-file-types/</guid>
    <description><![CDATA[Forensics - File types - writeup description This file was found among some files marked confidential but my pdf reader cannot read it, maybe yours can. You can download the file from here.
writeup Let&rsquo;s download the file!
wget https://artifacts.picoctf.net/c/329/Flag.pdf lets see what file we got here&hellip;
file Flag.pdf Flag.pdf: shell archive text Looks like this is a shell archive file (.shar)
lets rename the file to a proper file extension first.]]></description>
</item>
<item>
    <title>picoCTF - Forensics - Enhance!</title>
    <link>https://blog.ppeinecke.de/posts/picoctf-forensics-enhance/</link>
    <pubDate>Wed, 06 Apr 2022 14:18:09 &#43;0200</pubDate><guid>https://blog.ppeinecke.de/posts/picoctf-forensics-enhance/</guid>
    <description><![CDATA[Forensics - Enhance! - writeup description Download this image file and find the flag.
Download image file writeup Ok so I downloaded the image file drawing.flag.svg
Checking with the file command what that actually is:
file drawing.flag.svg drawing.flag.svg: SVG Scalable Vector Graphics image looks like it is actually a svg file.
Lets try to open it using feh e.g.
feh drawing.flag.svg feh WARNING: drawing.flag.svg - Does not look like an image (magic bytes missing) feh tells me that the magic bytes are missing.]]></description>
</item>
</channel>
</rss>
